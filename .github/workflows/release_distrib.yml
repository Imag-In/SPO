# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Relase native distribution

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-osx:
    runs-on: macos-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'
          cache: 'maven'

      #      - name: Cache Maven packages
      #        uses: actions/cache@v3
      #        with:
      #          path: ~/.m2
      #          key: ${{ runner.os }}-maven
      #          #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #          restore-keys: spo-mvnw

      - name: Build with Maven
        run: mvn -V -B -fae clean verify -Drelease -f pom.xml

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "target/*.dmg"
          allowUpdates: "true"

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'
          cache: 'maven'

      #      - name: Cache Maven packages
      #        uses: actions/cache@v3
      #        with:
      #          path: ~/.m2
      #          key: ${{ runner.os }}-maven
      #          #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #          restore-keys: spo-mvnw

      - name: Build with Maven
        run: mvn -V -B -fae clean verify -Drelease -f pom.xml

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "target/*.deb"
          allowUpdates: "true"

  build-win:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - name: Download Wix
        uses: i3h/download-release-asset@v1
        with:
          owner: wixtoolset
          repo: wix3
          tag: wix3112rtm
          file: wix311-binaries.zip
      - name: Decompress Wix
        uses: DuckSoft/extract-7z-action@v1.0
        with:
          pathSource: wix311-binaries.zip
          pathTarget: ./target/wix
      - name: Add Wix to Path
        run: echo "$HOME/target/wix" >> $GITHUB_PATH
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'
          cache: 'maven'

      #      - name: Cache Maven packages
      #        uses: actions/cache@v3
      #        with:
      #          path: ~/.m2
      #          key: spo-mvnw
      #          #          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #          restore-keys: spo-mvnw

      - name: Build with Maven
        run: mvn -V -B -fae -Drelease -D"windows.upgrade.uuid=${{ secrets.WINDOWS_INSTALLER_UUID }}" -e -f pom.xml clean verify

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "target/*.msi"
          allowUpdates: "true"

#
#  build-linux:
#
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up JDK 21
#      uses: actions/setup-java@v3
#      with:
#        distribution: 'temurin' # See 'Supported distributions' for available options
#        java-version: '21'
#        architecture: 'x64' # defaults to 'x64'
#        cache: 'maven'
#
#    - name: Cache Maven packages
#      uses: actions/cache@v2
#      with:
#        path: ~/.m2
#        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#        restore-keys: ${{ runner.os }}-m2
#
#    - name: Build with Maven
#      run: mvn clean install -Ppackage -f PhotoSlide/pom.xml
#
#    - name: Get release
#      id: get_release
#      uses: bruceadams/get-release@v1.3.2
#      env:
#        GITHUB_TOKEN: ${{ github.token }}
#
#    - name: Upload Release Asset Linux
#      id: upload-release-asset
#      uses: csexton/release-asset-action@v2
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        pattern: PhotoSlide/target/*.deb
#        release-url: ${{ steps.get_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#        github-token: ${{ secrets.GITHUB_TOKEN }}
