# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Relase native distribution

on:
  push:
    branches: [ main ]
#    tags:
#      - 'v[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:

jobs:
  build-jar:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}

    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'
      #          cache: 'maven'

      - name: Cache Maven packages
        uses: actions/cache@v4
        id: spo-maven
        with:
          path: ~/.m2/repository
          key: spo-maven
          save-always: true
          restore-keys: |
            spo-maven

      - name: Get previous tag
        uses: oprypin/find-latest-tag@v1
        with:
          repository: Imag-In/SPO  # The repository to scan.
          releases-only: true  # We know that all relevant tags have a GitHub release for them.
        id: get-latest-tag  # The step ID to refer to later.

      - name: Update CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          #          tag: ${{ github.ref_name }}
          fromTag: ${{ github.ref_name }}
          toTag: ${{ steps.get-latest-tag.outputs.tag }}

      - name: Maven bump version
        run: ./mvnw -B build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}'

      - name: Build jar
        run: ./mvnw -V -B -fae clean verify -f pom.xml

      - name: Get version
        id: get-version
        run: |
          SPO_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "SPO_VERSION=${SPO_VERSION}" >> $GITHUB_OUTPUT

      - name: Generte build env
        id: gen-build-env
        run: |
          mkdir -p target
          ./src/distrib/linux/generate-app-info.sh

      - name: Shared jar files
        uses: actions/upload-artifact@v4
        with:
          name: release-jar
          path: |
            target/build.env
            target/*.jar
          retention-days: 1

      - name: Save build.env
        run: cat target/build.env

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/spo-full.jar"
          allowUpdates: "true"
          draft: false
          makeLatest: true
          tag: "v${{ steps.get-version.outputs.SPO_VERSION }}"
          body: ${{ steps.changelog.outputs.changes }}

      - name: Maven next version
        id: next-version
        run: |
          ./mvnw -B build-helper:parse-version versions:set -DnewVersion='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.nextIncrementalVersion}-SNAPSHOT'
          SPO_NEXT_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "SPO_NEXT_VERSION=${SPO_NEXT_VERSION}" >> $GITHUB_OUTPUT

      - name: Commit version
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Christophe
          author_email: ouaibsky@gmail.com
          message: "Next Version ${{ steps.next-version.outputs.SPO_NEXT_VERSION }} [skip ci]"
          add: '[ "pom.xml", "CHANGELOG.md" ]'
  #          tag: "v${{ steps.get-version.outputs.SPO_VERSION }} --force"

  build-macos-intel:
    runs-on: macos-latest
    permissions:
      contents: write
    needs: build-jar
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'

      - name: Download jar files
        uses: actions/download-artifact@v4
        with:
          name: release-jar

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: 'build.env'

      - name: Extract dependencies
        run: java -Djarmode=layertools -jar spo-full.jar extract

      - name: Create Distribution
        run: |
          ./src/distrib/mac/build_app_macos.sh
          ls -la build/installer

      - name: Publish Mac release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/installer/*.dmg,build/installer/*.pkg,build/installer/*.sha256"
          allowUpdates: "true"
          tag: v${{ env.SPO_VERSION }}
          omitBody: "true"

  #  build-macos-arm:
  #    runs-on: macos-13-xlarge
  #    permissions:
  #      contents: write
  #    needs: build-jar
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: Set up JDK 21
  #        uses: actions/setup-java@v4
  #        with:
  #          distribution: 'zulu' # See 'Supported distributions' for available options
  #          java-version: '21'
  #          java-package: 'jdk+fx'
  #          architecture: 'aarch64' # defaults to 'x64'
  #
  #      - name: Download jar files
  #        uses: actions/download-artifact@v4
  #        with:
  #          name: release-jar
  #
  #      - uses: cardinalby/export-env-action@v2
  #        with:
  #          envFile: 'build.env'
  #
  #      - name: Extract dependencies
  #        run: java -Djarmode=layertools -jar spo-full.jar extract
  #
  #      - name: Create Distribution
  #        run: |
  #          ./src/distrib/mac/build_app_macos.sh
  #          ls -la build/installer
  #
  #      - name: Publish portable linux release
  #        uses: ncipollo/release-action@v1
  #        with:
  #          artifacts: "build/*.tar.gz,build/*.sha256"
  #          allowUpdates: "true"
  #          tag: v${{ env.SPO_VERSION }}
  #
  #      - name: Publish linux release
  #        uses: ncipollo/release-action@v1
  #        with:
  #          artifacts: "build/installer/*.dmg,build/installer/*.pkg,build/installer/*.sha256"
  #          allowUpdates: "true"
  #          tag: v${{ env.SPO_VERSION }}

  #  build-osx-arm:
  #    runs-on: macos-latest-xl
  #    permissions:
  #      contents: write
  #    needs: build-jar
  #    steps:
  #      - uses: actions/checkout@v4
  #      - name: Set up JDK 21
  #        uses: actions/setup-java@v4
  #        with:
  #          distribution: 'zulu' # See 'Supported distributions' for available options
  #          java-version: '21'
  #          java-package: 'jdk+fx'
  #      #          architecture: 'aarch64'
  #
  #      - name: Download jar files
  #        uses: actions/download-artifact@v3
  #        with:
  #          name: release-jar
  #
  #      - uses: cardinalby/export-env-action@v2
  #        with:
  #          envFile: 'build.env'
  #
  #      - name: Extract dependencies
  #        run: java -Djarmode=layertools -jar spo-full.jar extract
  #
  #      - name: Create Distribution
  #        run: |
  #          ./src/distrib/mac/build_app_macos.sh
  #          ls -la build/installer
  #
  #      - name: Publish release
  #        uses: ncipollo/release-action@v1
  #        with:
  #          artifacts: "build/installer/*.dmg,build/installer/*.pkg,build/installer/*.sha256"
  #          allowUpdates: "true"
  #          tag: v${{ env.SPO_VERSION }}

  build-linux:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: build-jar
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'

      - name: Download jar files
        uses: actions/download-artifact@v4
        with:
          name: release-jar

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: 'build.env'

      - name: Extract dependencies
        run: java -Djarmode=layertools -jar spo-full.jar extract

      - name: Create Distribution
        run: |
          chmod a+x ./src/distrib/linux/build_app_linux.sh
          ./src/distrib/linux/build_app_linux.sh
          ls -la build/installer

      - name: Publish portable release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/*.tar.gz,build/*.sha256"
          allowUpdates: "true"
          tag: v${{ env.SPO_VERSION }}
          omitBody: "true"

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/installer/*.deb,build/installer/*.rpm,build/installer/*.sha256"
          allowUpdates: "true"
          tag: v${{ env.SPO_VERSION }}
          omitBody: "true"

  build-windows:
    runs-on: windows-latest
    permissions:
      contents: write
    needs: build-jar
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '21'
          java-package: 'jdk+fx'
          architecture: 'x64' # defaults to 'x64'

      - name: Download jar files
        uses: actions/download-artifact@v4
        with:
          name: release-jar

      - uses: cardinalby/export-env-action@v2
        with:
          envFile: 'build.env'
      #      - name: Download Wix
      #        uses: i3h/download-release-asset@v1
      #        with:
      #          owner: wixtoolset
      #          repo: wix3
      #          tag: wix3112rtm
      #          file: wix311-binaries.zip
      #      - name: Decompress Wix
      #        uses: DuckSoft/extract-7z-action@v1.0
      #        with:
      #          pathSource: wix311-binaries.zip
      #          pathTarget: ./target/wix
      - name: Extract dependencies
        run: java -Djarmode=layertools -jar spo-full.jar extract

      - name: Create Distribution
        run: |
          .\src\distrib\win\build_app_windows.bat
          dir build\installer

      - name: Publish release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/installer/*.msi,build/installer/*.exe,build/installer/*.sha256"
          allowUpdates: "true"
          tag: v${{ env.SPO_VERSION }}
          omitBody: "true"
